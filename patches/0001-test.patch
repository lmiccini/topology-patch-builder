commit b0b4d1ae2e82b74ee3851202b7703ff3000fe0de
Author: Luca Miccini <lmiccini@redhat.com>
Date:   Mon Oct 27 17:28:37 2025 +0100

    test

diff --git a/.prow_ci.env b/.prow_ci.env
new file mode 100644
index 0000000..ce722ac
--- /dev/null
+++ b/.prow_ci.env
@@ -0,0 +1,2 @@
+export USE_IMAGE_DIGESTS=true
+export FAIL_FIPS_CHECK=true
diff --git a/Dockerfile b/Dockerfile
index 96d3377..b783ae7 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -1,7 +1,9 @@
 # Build the manager binary
-FROM --platform=$BUILDPLATFORM golang:1.24 AS builder
+FROM --platform=$BUILDPLATFORM registry.access.redhat.com/ubi9/go-toolset:1.24 as builder

 WORKDIR /workspace
+
+USER root
 # Copy the Go Modules manifests
 COPY go.mod go.mod
 COPY go.sum go.sum
@@ -25,23 +27,15 @@ ENV GOARCH=$TARGETARCH
 ARG FIPS_MODE=off
 ENV GOFIPS140=$FIPS_MODE

-# Build
-RUN CGO_ENABLED=0 GO111MODULE=on go build -a -tags timetzdata -o manager main.go
-
-# ---------------------------------------
-FROM alpine:latest AS etc-builder
+RUN CGO_ENABLED=1 GO111MODULE=on go build -a -tags timetzdata -o manager main.go

+# ---
+FROM registry.access.redhat.com/ubi9/ubi-minimal:latest
+WORKDIR /
+COPY --from=builder /workspace/manager .
 RUN echo "messaging-topology-operator:x:1001:" > /etc/group && \
     echo "messaging-topology-operator:x:1001:1001::/home/messaging-topology-operator:/usr/sbin/nologin" > /etc/passwd

-RUN apk add -U --no-cache ca-certificates
-
-# ---------------------------------------
-FROM scratch
-WORKDIR /
-COPY --from=builder /workspace/manager .
-COPY --from=etc-builder /etc/passwd /etc/group /etc/
-COPY --from=etc-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
 USER 1001:1001

 ENTRYPOINT ["/manager"]
diff --git a/Makefile b/Makefile
index af306e3..f83320d 100644
--- a/Makefile
+++ b/Makefile
@@ -129,7 +129,7 @@ run: generate fmt vet vuln manifests install just-run

 .PHONY: just-run
 just-run: ## Just runs 'go run main.go' without regenerating any manifests or deploying RBACs
-	KUBE_CONFIG=${HOME}/.kube/config OPERATOR_NAMESPACE=rabbitmq-system ENABLE_WEBHOOKS=false ENABLE_DEBUG_PPROF=true go run ./main.go -metrics-bind-address 127.0.0.1:8080
+	KUBE_CONFIG=${HOME}/.kube/config OPERATOR_NAMESPACE=openstack-operators ENABLE_WEBHOOKS=false ENABLE_DEBUG_PPROF=true go run ./main.go -metrics-bind-address 127.0.0.1:8080

 .PHONY: install
 install: manifests
diff --git a/PROJECT b/PROJECT
index 634e60e..ca592b3 100644
--- a/PROJECT
+++ b/PROJECT
@@ -1,7 +1,9 @@
 domain: rabbitmq.com
 layout:
 - go.kubebuilder.io/v3
-projectName: test
+plugins:
+  manifests.sdk.operatorframework.io/v2: {}
+projectName: messaging-topology-operator
 repo: github.com/rabbitmq/messaging-topology-operator
 resources:
 - api:
@@ -9,7 +11,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: Queue
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -18,7 +19,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: Exchange
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -27,7 +27,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: Binding
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -36,7 +35,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: User
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -45,7 +43,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: Vhost
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -54,7 +51,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: Policy
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -63,7 +59,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: Permission
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -72,7 +67,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: SchemaReplication
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -81,7 +75,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: Federation
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -90,7 +83,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: Shovel
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
@@ -98,7 +90,6 @@ resources:
     crdVersion: v1
     namespaced: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: SuperStream
   path: github.com/rabbitmq/messaging-topology-operator/api/v1alpha1
   version: v1alpha1
@@ -110,7 +101,6 @@ resources:
     namespaced: true
   controller: true
   domain: rabbitmq.com
-  group: rabbitmq.com
   kind: TopicPermission
   path: github.com/rabbitmq/messaging-topology-operator/api/v1beta1
   version: v1beta1
diff --git a/config/manager/manager.yaml b/config/manager/manager.yaml
index 37faa84..a36c16e 100644
--- a/config/manager/manager.yaml
+++ b/config/manager/manager.yaml
@@ -26,6 +26,10 @@ spec:
         image: controller:latest
         imagePullPolicy: Always
         name: manager
+        volumeMounts:
+        - mountPath: /etc/ssl/certs/rabbitmq-ca.crt
+          name: rabbitmq-ca
+          subPath: ca.crt
         resources:
           limits:
             cpu: 300m
@@ -46,4 +50,9 @@ spec:
           runAsNonRoot: true
           seccompProfile:
             type: RuntimeDefault
+      volumes:
+      - name: rabbitmq-ca
+        secret:
+          defaultMode: 420
+          secretName: rabbitmq-ca
       terminationGracePeriodSeconds: 10
diff --git a/config/manifests/bases/messaging-topology-operator.clusterserviceversion.yaml b/config/manifests/bases/messaging-topology-operator.clusterserviceversion.yaml
new file mode 100644
index 0000000..2208d60
--- /dev/null
+++ b/config/manifests/bases/messaging-topology-operator.clusterserviceversion.yaml
@@ -0,0 +1,162 @@
+apiVersion: operators.coreos.com/v1alpha1
+kind: ClusterServiceVersion
+metadata:
+  annotations:
+    alm-examples: '[]'
+    capabilities: Basic Install
+    features.operators.openshift.io/disconnected: "true"
+    features.operators.openshift.io/fips-compliant: "true"
+    features.operators.openshift.io/proxy-aware: "false"
+    features.operators.openshift.io/tls-profiles: "false"
+    features.operators.openshift.io/token-auth-aws: "false"
+    features.operators.openshift.io/token-auth-azure: "false"
+    features.operators.openshift.io/token-auth-gcp: "false"
+    operators.operatorframework.io/operator-type: non-standalone
+  name: messaging-topology-operator.v0.0.1
+  namespace: placeholder
+spec:
+  apiservicedefinitions: {}
+  customresourcedefinitions:
+    owned:
+    - description: Federations
+      displayName: Federations
+      kind: Federations
+      name: federations.rabbitmq.com
+      version: v1beta1
+    - description: Operatorpolicies
+      displayName: Operatorpolicies
+      kind: Operatorpolicies
+      name: operatorpolicies.rabbitmq.com
+      version: v1beta1
+    - description: Permissions
+      displayName: Permissions
+      kind: Permissions
+      name: permissions.rabbitmq.com
+      version: v1beta1
+    - description: Policies
+      displayName: Policies
+      kind: Policies
+      name: policies.rabbitmq.com
+      version: v1beta1
+    - description: Queues
+      displayName: Queues
+      kind: Queues
+      name: queues.rabbitmq.com
+      version: v1beta1
+    - description: Schemareplications
+      displayName: Schemareplications
+      kind: Schemareplications
+      name: schemareplications.rabbitmq.com
+      version: v1beta1
+    - description: Shovels
+      displayName: Shovels
+      kind: Shovels
+      name: shovels.rabbitmq.com
+      version: v1beta1
+    - description: Superstreams
+      displayName: Superstreams
+      kind: Superstreams
+      name: superstreams.rabbitmq.com
+      version: v1beta1
+    - description: Topicpermissions
+      displayName: Topicpermissions
+      kind: Topicpermissions
+      name: topicpermissions.rabbitmq.com
+      version: v1beta1
+    - description: Users
+      displayName: Users
+      kind: Users
+      name: users.rabbitmq.com
+      version: v1beta1
+    - description: Vhosts
+      displayName: Vhosts
+      kind: Vhosts
+      name: vhosts.rabbitmq.com
+      version: v1beta1
+    - description: Binding is the Schema for the bindings API
+      displayName: Binding
+      kind: Binding
+      name: bindings.rabbitmq.com
+      version: v1beta1
+    - description: Exchange is the Schema for the exchanges API
+      displayName: Exchange
+      kind: Exchange
+      name: exchanges.rabbitmq.com
+      version: v1beta1
+    - description: Federation is the Schema for the federations API
+      displayName: Federation
+      kind: Federation
+      name: federations.rabbitmq.com
+      version: v1beta1
+    - description: Permission is the Schema for the permissions API
+      displayName: Permission
+      kind: Permission
+      name: permissions.rabbitmq.com
+      version: v1beta1
+    - description: Policy is the Schema for the policies API
+      displayName: Policy
+      kind: Policy
+      name: policies.rabbitmq.com
+      version: v1beta1
+    - description: Queue is the Schema for the queues API
+      displayName: Queue
+      kind: Queue
+      name: queues.rabbitmq.com
+      version: v1beta1
+    - description: 'SchemaReplication is the Schema for the schemareplications API
+        This feature requires Tanzu RabbitMQ with schema replication plugin. For more
+        information, see: https://tanzu.vmware.com/rabbitmq and https://www.rabbitmq.com/definitions-standby.html.'
+      displayName: Schema Replication
+      kind: SchemaReplication
+      name: schemareplications.rabbitmq.com
+      version: v1beta1
+    - description: Shovel is the Schema for the shovels API
+      displayName: Shovel
+      kind: Shovel
+      name: shovels.rabbitmq.com
+      version: v1beta1
+    - description: SuperStream is the Schema for the queues API
+      displayName: Super Stream
+      kind: SuperStream
+      name: superstreams.rabbitmq.com
+      version: v1alpha1
+    - description: TopicPermission is the Schema for the topicpermissions API
+      displayName: Topic Permission
+      kind: TopicPermission
+      name: topicpermissions.rabbitmq.com
+      version: v1beta1
+    - description: User is the Schema for the users API.
+      displayName: User
+      kind: User
+      name: users.rabbitmq.com
+      version: v1beta1
+    - description: Vhost is the Schema for the vhosts API
+      displayName: Vhost
+      kind: Vhost
+      name: vhosts.rabbitmq.com
+      version: v1beta1
+  description: Messaging Topology Operator
+  displayName: Messaging Topology Operator
+  install:
+    spec:
+      deployments: null
+    strategy: ""
+  installModes:
+  - supported: true
+    type: OwnNamespace
+  - supported: true
+    type: SingleNamespace
+  - supported: false
+    type: MultiNamespace
+  - supported: true
+    type: AllNamespaces
+  keywords:
+  - rabbitmq
+  links:
+  - name: Messaging Topology Operator
+    url: https://github.com/rabbitmq/messaging-topology-operator
+  maturity: alpha
+  provider:
+    name: RabbitMQ
+    url: https://rabbitmq.com
+  version: 0.0.1
diff --git a/config/manifests/kustomization.yaml b/config/manifests/kustomization.yaml
new file mode 100644
index 0000000..6be4b8a
--- /dev/null
+++ b/config/manifests/kustomization.yaml
@@ -0,0 +1,10 @@
+# These resources constitute the fully configured set of manifests
+# used to generate the 'manifests/' directory in an OLM bundle.
+# Required to use the hack/make-olm-bundle.sh script via
+# operator-sdk.
+resources:
+- bases/messaging-topology-operator.clusterserviceversion.yaml
+- ../default/base
+- ../samples/base
+- ../crd
+- ../rbac
diff --git a/hack/build-olm-bundle.sh b/hack/build-olm-bundle.sh
new file mode 100755
index 0000000..a6f3c67
--- /dev/null
+++ b/hack/build-olm-bundle.sh
@@ -0,0 +1,16 @@
+#!/bin/bash
+# Script to build an OLM bundle (Operator Lifecycle Manager)
+# NOTE: requires operator-sdk
+
+set -x
+rm -Rf bundle bundle.Dockerfile
+make manifests
+operator-sdk generate kustomize manifests -q
+#cd config/manager && kustomize edit set image controller=rabbitmq-cluster-operator:latest
+kustomize build config/manifests | operator-sdk generate bundle --overwrite --verbose --use-image-digests
+#FIXME: look into why scorecard isn't being deactivated
+sed -e '/.*scorecard/d' -i bundle.Dockerfile
+operator-sdk bundle validate ./bundle
+
+echo "Listing..."
+ls bundle/manifests
diff --git a/properties.yaml b/properties.yaml
new file mode 100644
index 0000000..82c2ebb
--- /dev/null
+++ b/properties.yaml
@@ -0,0 +1,4 @@
+properties:
+  - property:
+      type: product
+      value: openstack
